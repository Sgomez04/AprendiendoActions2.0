# name: Github Actions Matrix

# on:
#   push:
#     branches:
#       - main

# jobs:

#   strategy:
#     runs-on: ubuntu-latest

#     strategy:
#       matrix:
#         json_tag: ["lambda_name1","lambda_name2","lambda_name3","lambda_name4"]

#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v2

      # - name: Reading config.json and setting environment variables
      #   run: |
      #     properties=$(jq -r 'keys[]' ./config.json)
      #     while IFS= read -r property; do
      #       value=$(jq -r ".$property" ./$config.json )
      #       echo "$property=$value" >> $GITHUB_ENV
      #     done <<< "$properties"

      
      # - name: Read config.json
      #   id: read_config
      #   run: |
      #     values=()
      #     properties=$(jq -r 'keys[]' ./config.json)
      #     while IFS= read -r property; do
      #       value=$(jq -r ".$property" ./config.json)
      #       values+=("$value")
      #     done <<< "$properties"
      #     values_string=$(IFS=','; echo "${values[*]}")
      #     values=$values_string >> $GITHUB_OUTPUT

#       - name: Show environment variables
#         run: echo "${{ matrix.json_tags }} >> $GITHUB_ENV"

name: Github Actions Matrix

on:
  push:
    branches:
      - main

jobs:
  get_tags:
    runs-on: ubuntu-latest
    outputs:
      values: ${{ steps.read_config.outputs.keys }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Read config.json
        id: read_config
        run: |
          properties= echo $(jq -r 'keys[]' ./config.json)
          keys=$(echo $properties) >> $GITHUB_OUTPUT

  show_info:
    needs: get_tags
    runs-on: ubuntu-latest

    # strategy:
    #   matrix:
    #     tags: ${{ needs.get_tags.outputs.values }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Show environment variables
        run: echo "${{ needs.get_tags.outputs.values }}"

  
  # echo_tags:
  #   needs: get_tags
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       tags: ${{ fromJson(needs.get_tags.outputs.json_data) }}
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v2

  #     - name: Show tags
  #       run: |
  #         tag="${{ matrix.tags }}"
  #         echo "Tag: $tag"
  #         echo "Values:"
  #         jq -r ".$tag | keys[]" json_data/json_data.txt | while read -r key; do
  #           value=$(jq -r ".$tag.$key" json_data/json_data.txt)
  #           echo "$key: $value"
  #         done